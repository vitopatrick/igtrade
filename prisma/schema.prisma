generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Status {
  DENIED
  PENDING
  APPROVED
}


enum UserRole {
  ADMIN
  USER
}

model Users {
  id            Int            @id @default(autoincrement())
  clerkId       String @unique
  first_name    String
  last_name     String
  email         String
  revenue       Int            @default(0)
  profit        Int            @default(0)
  trading_bonus Int            @default(0)
  createdAt     DateTime       @default(now())
  deposits      Deposits[]
  transactions  Transactions[]
  withdrawals   Withdrawals[]
  chartData     ChartData[]
}

model Deposits {
  id        Int      @id @default(autoincrement())
  amount    Int
  createdAt DateTime @default(now())
  status    Status   @default(PENDING)
  method    String
  remarks   String
  user      Users    @relation(fields: [clerkId], references: [clerkId])
  clerkId    String
  prove     String 
}

model Withdrawals {
  id        Int      @id @default(autoincrement())
  amount    Int
  createdAt DateTime @default(now())
  status    Status   @default(PENDING)
  method    String
  remarks   String
  user      Users    @relation(fields: [clerkId], references: [clerkId])
  clerkId    String
}

model Transactions {
  id        Int      @id @default(autoincrement())
  remarks   String
  type      String
  createdAt DateTime @default(now())
  amount    Int
  user      Users    @relation(fields: [clerkId], references: [clerkId])
  clerkId    String
}

model ChartData {
  id     Int    @id @default(autoincrement())
  profit Int
  user   Users  @relation(fields: [clerkId], references: [clerkId])
  clerkId String
  date   String
}
